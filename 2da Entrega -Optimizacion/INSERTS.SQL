-- 1 PROVINCIA ------------------------------------------------------------------------------------------------------
INSERT INTO Provincia (PROVINCIA_NOMBRE)
SELECT DISTINCT CLIENTE_PROVINCIA 
FROM gd_esquema.Maestra 
WHERE CLIENTE_PROVINCIA IS NOT NULL

INSERT INTO Provincia (PROVINCIA_NOMBRE)
SELECT DISTINCT SUPER_PROVINCIA 
FROM gd_esquema.Maestra 
WHERE SUPER_PROVINCIA IS NOT NULL
 
-- 2 LOCALIDAD ------------------------------------------------------------------------------------------------------
INSERT INTO Localidad (PROVINCIA_ID, LOCALIDAD_NOMBRE)
SELECT DISTINCT P.PROVINCIA_ID, M.CLIENTE_LOCALIDAD
FROM gd_esquema.Maestra M
INNER JOIN Provincia P ON M.CLIENTE_PROVINCIA = P.PROVINCIA_NOMBRE
WHERE M.CLIENTE_LOCALIDAD IS NOT NULL;
       
INSERT INTO Localidad (PROVINCIA_ID, LOCALIDAD_NOMBRE)
SELECT DISTINCT P.PROVINCIA_ID, M.SUPER_LOCALIDAD
FROM gd_esquema.Maestra M
INNER JOIN Provincia P ON M.CLIENTE_PROVINCIA = P.PROVINCIA_NOMBRE
WHERE M.SUPER_LOCALIDAD IS NOT NULL

INSERT INTO Localidad (PROVINCIA_ID, LOCALIDAD_NOMBRE)
SELECT DISTINCT P.PROVINCIA_ID, M.SUCURSAL_LOCALIDAD
FROM gd_esquema.Maestra M
INNER JOIN Provincia P ON M.SUCURSAL_PROVINCIA = P.PROVINCIA_NOMBRE
WHERE M.SUCURSAL_PROVINCIA IS NOT NULL;

-- 3 DOMICILIO ------------------------------------------------------------------------------------------------------
INSERT INTO Domicilio (LOCALIDAD_ID, DIRECCION, ALTURA, PISO, DEPARTAMENTO)
SELECT DISTINCT L.LOCALIDAD_ID,
	SUBSTRING(M.CLIENTE_DOMICILIO, 1, LEN(M.CLIENTE_DOMICILIO) - CHARINDEX(' ', REVERSE(M.CLIENTE_DOMICILIO))) AS DIRECCION,
	RIGHT(M.CLIENTE_DOMICILIO, CHARINDEX(' ', REVERSE(M.CLIENTE_DOMICILIO)) - 1) AS ALTURA,
	NULL AS PISO,
	NULL AS DEPARTAMENTO
FROM gd_esquema.Maestra M
	INNER JOIN Localidad L ON M.CLIENTE_LOCALIDAD = L.LOCALIDAD_NOMBRE
WHERE M.CLIENTE_DOMICILIO IS NOT NULL;

INSERT INTO Domicilio (LOCALIDAD_ID, DIRECCION, ALTURA, PISO, DEPARTAMENTO)
SELECT DISTINCT L.LOCALIDAD_ID,
	SUBSTRING(M.SUPER_DOMICILIO, 1, LEN(M.SUPER_DOMICILIO) - CHARINDEX(' ', REVERSE(M.SUPER_DOMICILIO))) AS DIRECCION,
	RIGHT(M.SUPER_DOMICILIO, CHARINDEX(' ', REVERSE(M.SUPER_DOMICILIO)) - 1) AS ALTURA,
	NULL AS PISO,
	NULL AS DEPARTAMENTO
FROM gd_esquema.Maestra M
	INNER JOIN Localidad L ON M.SUPER_LOCALIDAD = L.LOCALIDAD_NOMBRE
WHERE M.SUPER_DOMICILIO IS NOT NULL;

INSERT INTO Domicilio (LOCALIDAD_ID, DIRECCION, ALTURA, PISO, DEPARTAMENTO)
SELECT DISTINCT L.LOCALIDAD_ID,
	SUBSTRING(M.SUCURSAL_DIRECCION, 1, LEN(M.SUCURSAL_DIRECCION) - CHARINDEX(' ', REVERSE(M.SUCURSAL_DIRECCION))) AS DIRECCION,
	RIGHT(M.SUCURSAL_DIRECCION, CHARINDEX(' ', REVERSE(M.SUCURSAL_DIRECCION)) - 1) AS ALTURA,
	NULL AS PISO,
	NULL AS DEPARTAMENTO
FROM gd_esquema.Maestra M
	INNER JOIN Localidad L ON M.SUCURSAL_LOCALIDAD = L.LOCALIDAD_NOMBRE
WHERE M.SUCURSAL_DIRECCION IS NOT NULL;

-- 4 CLIENTE ------------------------------------------------------------------------------------------------------

-- Seleccionar registros únicos con ROW_NUMBER
WITH CTE_Clientes AS (
    SELECT DISTINCT
        M.CLIENTE_NOMBRE, 
        M.CLIENTE_APELLIDO, 
        M.CLIENTE_DNI, 
        M.CLIENTE_FECHA_REGISTRO,
        M.CLIENTE_FECHA_NACIMIENTO, 
        M.CLIENTE_MAIL, 
        M.CLIENTE_TELEFONO,
        D.DOMICILIO_ID,
        ROW_NUMBER() OVER (PARTITION BY M.CLIENTE_DNI, M.CLIENTE_MAIL ORDER BY M.CLIENTE_FECHA_REGISTRO DESC) AS rn
    FROM gd_esquema.Maestra M
    INNER JOIN Domicilio D 
        ON M.CLIENTE_DOMICILIO = D.DIRECCION + ' ' + CAST(D.ALTURA AS NVARCHAR(50))
    WHERE M.CLIENTE_DNI IS NOT NULL
)

-- Insertar solo los registros únicos en la tabla Cliente
INSERT INTO Cliente (
    CLIENTE_NOMBRE, CLIENTE_APELLIDO, CLIENTE_DNI, CLIENTE_FECHA_REGISTRO,
    CLIENTE_FECHA_NACIMIENTO, CLIENTE_MAIL, CLIENTE_TELEFONO,
    DOMICILIO_ID 
)
SELECT 
    CLIENTE_NOMBRE, CLIENTE_APELLIDO, CLIENTE_DNI, CLIENTE_FECHA_REGISTRO,
    CLIENTE_FECHA_NACIMIENTO, CLIENTE_MAIL, CLIENTE_TELEFONO,
    DOMICILIO_ID
FROM CTE_Clientes
WHERE rn = 1;


-- 5 ESTADO ENVIO ------------------------------------------------------------------------------------------------------
INSERT INTO EstadoEnvio (ESTADO)
SELECT DISTINCT M.ENVIO_ESTADO
FROM gd_esquema.Maestra M
WHERE ENVIO_ESTADO IS NOT NULL

-- 6 ENVIO ------------------------------------------------------------------------------------------------------
INSERT INTO Envio (CLIENTE_ID, ESTADO_ENVIO_ID, ENVIO_COSTO, ENVIO_FECHA_PROGRAMADA, ENVIO_HORA_INICIO, ENVIO_HORA_FIN, ENVIO_FECHA_ENTREGA)
SELECT 
	c.CLIENTE_ID, 
	e.ESTADO_ENVIO_ID, 
	m.ENVIO_COSTO, 
	m.ENVIO_FECHA_PROGRAMADA, 
	m.ENVIO_HORA_INICIO, 
	m.ENVIO_HORA_FIN, 
	m.ENVIO_FECHA_ENTREGA
FROM 
gd_esquema.Maestra m
	INNER JOIN Cliente c ON c.CLIENTE_DNI = m.CLIENTE_DNI 
	INNER JOIN EstadoEnvio e ON e.ESTADO = m.ENVIO_ESTADO
WHERE m.ENVIO_COSTO IS NOT NULL

-- 7 MARCA ------------------------------------------------------------------------------------------------------
-- Crear la tabla temporal
CREATE TABLE #tempMarca (
    MARCA_ID BIGINT,
    MARCA_NOMBRE NVARCHAR(255),
    MARCA_DESCRIPCION NVARCHAR(255)
);

-- Insertar datos en la tabla temporal
INSERT INTO #tempMarca (MARCA_ID, MARCA_NOMBRE, MARCA_DESCRIPCION)
SELECT DISTINCT 
    CAST(SUBSTRING(PRODUCTO_MARCA, CHARINDEX('°', PRODUCTO_MARCA) + 1, LEN(PRODUCTO_MARCA)) AS BIGINT) AS MARCA_ID,
    PRODUCTO_MARCA,
    NULL
FROM gd_esquema.Maestra
WHERE CHARINDEX('°', PRODUCTO_MARCA) > 0;

-- Insertar datos únicos en la tabla Marca
INSERT INTO Marca (MARCA_ID, MARCA_NOMBRE, MARCA_DESCRIPCION)
SELECT DISTINCT MARCA_ID, MARCA_NOMBRE, MARCA_DESCRIPCION
FROM #tempMarca;

-- Eliminar la tabla temporal
DROP TABLE #tempMarca;

-- 8 SUBCATEGORIA ------------------------------------------------------------------------------------------------------
CREATE TABLE #tempSC (
    SUBCATEGORIA_ID BIGINT,
    SUBCATEGORIA_NOMBRE NVARCHAR(255),
    SUBCATEGORIA_DESCRIPCION NVARCHAR(255)
);

-- Insertar datos en la tabla temporal
INSERT INTO #tempSC (SUBCATEGORIA_ID, SUBCATEGORIA_NOMBRE, SUBCATEGORIA_DESCRIPCION)
SELECT DISTINCT 
    CAST(SUBSTRING(PRODUCTO_SUB_CATEGORIA, CHARINDEX('°', PRODUCTO_SUB_CATEGORIA) + 1, LEN(PRODUCTO_SUB_CATEGORIA)) AS BIGINT) AS SUBCATEGORIA_ID,
    PRODUCTO_SUB_CATEGORIA,
    NULL
FROM gd_esquema.Maestra
WHERE CHARINDEX('°', PRODUCTO_SUB_CATEGORIA) > 0;

-- Insertar datos únicos en la tabla SubCategoria
INSERT INTO SubCategoria (SUBCATEGORIA_ID, SUBCATEGORIA_NOMBRE, SUBCATEGORIA_DESCRIPCION)
SELECT DISTINCT SUBCATEGORIA_ID, SUBCATEGORIA_NOMBRE, SUBCATEGORIA_DESCRIPCION
FROM #tempSC;

-- Eliminar la tabla temporal
DROP TABLE #tempSC;

-- 9 CATEGORIA ------------------------------------------------------------------------------------------------------ 
-- Crear la tabla temporal
CREATE TABLE #temp (
    CATEGORIA_ID BIGINT,
    SUBCATEGORIA_ID BIGINT,
    CATEGORIA_NOMBRE NVARCHAR(255),
    CATEGORIA_DESCRIPCION NVARCHAR(255)
);

-- Insertar datos en la tabla temporal
INSERT INTO #temp (CATEGORIA_ID, SUBCATEGORIA_ID, CATEGORIA_NOMBRE, CATEGORIA_DESCRIPCION)
SELECT DISTINCT 
    CAST(SUBSTRING(PRODUCTO_CATEGORIA, CHARINDEX('°', PRODUCTO_CATEGORIA) + 1, LEN(PRODUCTO_CATEGORIA)) AS BIGINT) AS CATEGORIA_ID,
    CAST(SUBSTRING(PRODUCTO_SUB_CATEGORIA, CHARINDEX('°', PRODUCTO_SUB_CATEGORIA) + 1, LEN(PRODUCTO_SUB_CATEGORIA)) AS BIGINT) AS SUBCATEGORIA_ID,
    PRODUCTO_CATEGORIA,
    NULL
FROM gd_esquema.Maestra
WHERE CHARINDEX('°', PRODUCTO_CATEGORIA) > 0 AND CHARINDEX('°', PRODUCTO_SUB_CATEGORIA) > 0;

-- Insertar datos únicos en la tabla Categoria
INSERT INTO Categoria (CATEGORIA_ID, SUBCATEGORIA_ID, CATEGORIA_NOMBRE, CATEGORIA_DESCRIPCION)
SELECT CATEGORIA_ID, MIN(SUBCATEGORIA_ID), CATEGORIA_NOMBRE, CATEGORIA_DESCRIPCION
FROM #temp
GROUP BY CATEGORIA_ID, CATEGORIA_NOMBRE, CATEGORIA_DESCRIPCION;

-- Eliminar la tabla temporal
DROP TABLE #temp;

-- 10 PRODUCTO ------------------------------------------------------------------------------------------------------
INSERT INTO Producto(
	PRODUCTO_NOMBRE, PRODUCTO_DESCRIPCION, PRODUCTO_PRECIO, MARCA_ID, CATEGORIA_ID
)
SELECT DISTINCT PRODUCTO_NOMBRE, PRODUCTO_DESCRIPCION, PRODUCTO_PRECIO, 
	Ma.MARCA_ID, C.CATEGORIA_ID
FROM gd_esquema.Maestra M
	INNER JOIN Categoria C ON M.PRODUCTO_CATEGORIA = C.CATEGORIA_NOMBRE
	INNER JOIN Marca Ma ON M.PRODUCTO_MARCA = Ma.MARCA_NOMBRE


SELECT PRODUCTO_DESCRIPCION, PRODUCTO_NOMBRE FROM gd_esquema.Maestra
WHERE PRODUCTO_NOMBRE IS NOT NULL

-- 11 TIPOCAJA ------------------------------------------------------------------------------------------------------ 
INSERT INTO TipoCaja (
CAJA_NOMBRE, CAJA_DESCRIPCION
)
SELECT DISTINCT CAJA_TIPO, null
FROM gd_esquema.Maestra

-- 12 CAJA ------------------------------------------------------------------------------------------------------
INSERT INTO Caja (CAJA_NUMERO, CAJA_TIPO_ID)
SELECT DISTINCT CAJA_NUMERO, T.CAJA_TIPO_ID 
FROM gd_esquema.Maestra M
INNER JOIN TipoCaja T ON M.CAJA_TIPO = T.CAJA_NOMBRE

-- 13 REGLA ------------------------------------------------------------------------------------------------------
INSERT INTO Regla (REGLA_DESCRIPCION, REGLA_DESCUENTO_PORCENTAJE, REGLA_CANTIDAD_APLICABLE_REGLA, REGLA_CANTIDAD_APLICABLE_DESCUENTO, 
    REGLA_CANTIDAD_MAXIMA, REGLA_MISMA_MARCA, REGLA_MISMO_PRODUCTO)
SELECT 
    REGLA_DESCRIPCION, 
    REGLA_DESCUENTO_APLICABLE_PROD, 
    REGLA_CANT_APLICABLE_REGLA, 
    REGLA_CANT_APLICA_DESCUENTO, 
    REGLA_CANT_MAX_PROD, 
    CAST(REGLA_APLICA_MISMA_MARCA AS BIT), 
    CAST(REGLA_APLICA_MISMO_PROD AS BIT)
FROM 
    gd_esquema.Maestra
WHERE 
    REGLA_DESCRIPCION IS NOT NULL;

-- 14 SUPERMERCADO ------------------------------------------------------------------------------------------------------
INSERT INTO Supermercado (DOMICILIO_ID, SUPER_NOMBRE, SUPER_RAZON_SOC, SUPER_CUIT, SUPER_IIBB, SUPER_FECHA_INI_ACTIVIDAD, SUPER_CONDICION_FISCAL)
SELECT DISTINCT
    d.DOMICILIO_ID,
    m.SUPER_NOMBRE,
    m.SUPER_RAZON_SOC,
    m.SUPER_CUIT,
    m.SUPER_IIBB,
    m.SUPER_FECHA_INI_ACTIVIDAD,
    m.SUPER_CONDICION_FISCAL
FROM 
    gd_esquema.Maestra m
INNER JOIN Domicilio d ON 
	M.SUPER_DOMICILIO = D.DIRECCION + ' ' + CAST(D.ALTURA AS NVARCHAR(50))

-- 15 SUCURSAL ------------------------------------------------------------------------------------------------------
INSERT INTO Sucursal (SUPER_ID, SUCURSAL_NOMBRE, SUCURSAL_DIRECCION, SUCURSAL_LOCALIDAD, SUCURSAL_PROVINCIA)
SELECT DISTINCT
    s.SUPER_ID,
    m.SUCURSAL_NOMBRE,
    m.SUCURSAL_DIRECCION,
    m.SUCURSAL_LOCALIDAD,
    m.SUCURSAL_PROVINCIA
FROM 
    gd_esquema.Maestra m
INNER JOIN Supermercado s ON 
	s.SUPER_ID = SUPER_ID

-- 16 TIPOMEDIOPAGO ------------------------------------------------------------------------------------------------------
INSERT INTO TipoMedioPago(TIPO_MEDIO_PAGO,TARJETA_NUMERO,TARJETA_CUOTAS,TARJETA_FECHA_VENCEMIENTO)
SELECT DISTINCT 
	m.PAGO_TIPO_MEDIO_PAGO, 
	m.PAGO_TARJETA_NRO, 
	m.PAGO_TARJETA_CUOTAS, 
	m.PAGO_TARJETA_FECHA_VENC 
FROM gd_esquema.Maestra m

-- 17 MEDIODEPAGO ------------------------------------------------------------------------------------------------------
INSERT INTO MedioDePago (
    MEDIO_PAGO_DESCRIPCION, TIPO_MEDIO_PAGO_ID
)
SELECT DISTINCT 
    m.PAGO_MEDIO_PAGO, T.TIPO_MEDIO_PAGO_ID
FROM gd_esquema.Maestra m
 JOIN TipoMedioPago T ON M.PAGO_TIPO_MEDIO_PAGO = T.TIPO_MEDIO_PAGO

-- 18 EMPLEADO ------------------------------------------------------------------------------------------------------
INSERT INTO Empleado (
 EMPLEADO_NOMBRE, EMPLEADO_APELLIDO, EMPLEADO_DNI, EMPLEADO_FECHA_REGISTRO, EMPLEADO_TELEFONO)
SELECT DISTINCT 
    m.EMPLEADO_NOMBRE,
    m.EMPLEADO_APELLIDO,
    m.EMPLEADO_DNI,
    m.EMPLEADO_FECHA_REGISTRO,
    m.EMPLEADO_TELEFONO
FROM gd_esquema.Maestra m
WHERE m.EMPLEADO_NOMBRE IS NOT NULL

-- 19 Descuento ------------------------------------------------------------------------------------------------------
INSERT INTO Descuento (DESCRIPCION, MEDIO_PAGO_ID, FECHA_INICIO, FECHA_FIN, DESCUENTO_PORCENTAJE, DESCUENTO_TOPE)
SELECT
    m.DESCUENTO_DESCRIPCION,
    mp.MEDIO_PAGO_ID,
    m.DESCUENTO_FECHA_INICIO,
    m.DESCUENTO_FECHA_FIN,
    m.DESCUENTO_PORCENTAJE_DESC,
    m.DESCUENTO_TOPE
FROM 
    gd_esquema.Maestra m
INNER JOIN 
    MedioDePago mp ON mp.MEDIO_PAGO_DESCRIPCION = m.PAGO_MEDIO_PAGO
WHERE 
    m.DESCUENTO_DESCRIPCION IS NOT NULL AND
	m.PAGO_MEDIO_PAGO IS NOT NULL;

-- 20 PROMOCION ------------------------------------------------------------------------------------------------------
INSERT INTO Promocion(
    PRODUCTO_ID,
    DESCRIPCION,
    FECHA_INICIO,
    FECHA_FIN,
    PROMOCION_APLICADA_DESCUENTO
)
SELECT DISTINCT 
	P.PRODUCTO_ID, 
	M.PROMOCION_DESCRIPCION,
	M.PROMOCION_FECHA_INICIO, 
	M.PROMOCION_FECHA_FIN, 
	M.PROMO_APLICADA_DESCUENTO
FROM gd_esquema.Maestra M
INNER JOIN  Producto P ON M.PRODUCTO_NOMBRE = P.PRODUCTO_NOMBRE
WHERE
	M.PROMOCION_DESCRIPCION IS NOT NULL

-- 21 
SELECT * INTO #tem FROM Categoria
SELECT * FROM #tem
DROP TABLE #tem